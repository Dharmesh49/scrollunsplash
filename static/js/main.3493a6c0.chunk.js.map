{"version":3,"sources":["components/Loader.js","components/Heading.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","styled","header","h1","div","Loader","class","WrapperImages","createGlobalStyle","section","App","useState","value","setValue","results","setResults","images","item","fetchImages","timestamp","Date","now","fetch","then","res","json","data","console","log","className","type","style","width","onChange","e","target","onClick","dataLength","length","next","hasMore","loader","map","image","src","urls","regular","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAGMA,GCASC,IAAOC,OAAV,8FAMDD,IAAOE,GAAV,yFDNQF,IAAOG,IAAV,kjCA2DAC,EAAS,WACpB,OACE,cAACL,EAAD,UACE,sBAAKM,MAAM,eAAX,UACE,wBAEA,wBAEA,wBAEA,8B,gBE/CFC,GAXcC,YAAH,mJAWKP,IAAOQ,QAAV,sMA2EJC,MAlEf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,oBAAS,GAAvC,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBAAOK,EAAP,KAAwBC,GAAxB,WAEMC,EAAc,WAClB,IACMC,EAAYC,KAAKC,MAEtBC,MAAM,sGAAD,OAAuGV,EAAvG,cAAkHO,IACpHI,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,GACZX,EAAWW,EAAKZ,aAOzB,OACE,sBAAKe,UAAU,MAAf,UACA,sBAAKA,UAAU,QAAf,UACA,0CAEA,uBAAOC,KAAK,OACXC,MAAO,CAACC,MAAM,OACdpB,MAAOA,EACPqB,SAAU,SAACC,GAAD,OAAKrB,EAASqB,EAAEC,OAAOvB,UAClC,wBAAQwB,QAAS,kBAAIlB,KAArB,qBAIA,cAAC,IAAD,CACImB,WAAYrB,EAAOsB,OACnBC,KAAMrB,EACNsB,SAAS,EACTC,OAAQ,cAAC,EAAD,IAJZ,SAMI,cAAClC,EAAD,UACGS,EAAO0B,KAAI,SAAAC,GAAK,OACf,qBAAKd,UAAU,OAAqBe,IAAK3B,EAAK4B,KAAKC,SAAxB7B,EAAK8B,WAIxC,qBAAKlB,UAAU,UAAf,SAEIf,EAAQ4B,KAAI,SAACzB,GAGnB,OAAO,qBAAKY,UAAU,OAAqBe,IAAK3B,EAAK4B,KAAKC,SAAxB7B,EAAK8B,aCzE1BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3493a6c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Loading = styled.div`\r\ntext-align: center;\r\n.lds-ellipsis {\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 80px;\r\n  height: 80px;\r\n}\r\n.lds-ellipsis div {\r\n  position: absolute;\r\n  top: 33px;\r\n  width: 13px;\r\n  height: 13px;\r\n  border-radius: 50%;\r\n  background: #222;\r\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n}\r\n.lds-ellipsis div:nth-child(1) {\r\n  left: 8px;\r\n  animation: lds-ellipsis1 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(2) {\r\n  left: 8px;\r\n  animation: lds-ellipsis2 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(3) {\r\n  left: 32px;\r\n  animation: lds-ellipsis2 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(4) {\r\n  left: 56px;\r\n  animation: lds-ellipsis3 0.6s infinite;\r\n}\r\n@keyframes lds-ellipsis1 {\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n@keyframes lds-ellipsis3 {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    transform: scale(0);\r\n  }\r\n}\r\n@keyframes lds-ellipsis2 {\r\n  0% {\r\n    transform: translate(0, 0);\r\n  }\r\n  100% {\r\n    transform: translate(24px, 0);\r\n  }\r\n}\r\n`;\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <Loading>\r\n      <div class=\"lds-ellipsis\">\r\n        <div>\r\n        </div>\r\n        <div>\r\n        </div>\r\n        <div>\r\n        </div>\r\n        <div>\r\n        </div>\r\n      </div>\r\n    </Loading>\r\n  )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n  max-width: 70rem;\r\n  margin: 2rem auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  font-family: 'Oswald', sans-serif;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nexport const Heading = () => {\r\n\r\n    return (\r\n      <Header>\r\n        <H1>Unsplash</H1>\r\n        <p>The internetâ€™s source of freely usable images.</p>\r\n        <p>Powered by creators everywhere.</p>\r\n        {/* <form>\r\n          <Input type=\"text\" placeholder=\"Search photos\" />\r\n          <Button>Search</Button>\r\n        </form> */}\r\n      </Header>\r\n    )\r\n  }","/* eslint-disable jsx-a11y/alt-text */\n\nimport React, {useState} from 'react';\nimport './App.css';\nimport { Heading } from './components/Heading';\n\nimport { Loader } from './components/Loader';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\n// Style\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  body {\n    font-family: sans-serif;\n  }\n`;\n\nconst WrapperImages = styled.section`\n  max-width: 70rem;\n  margin: 4rem auto;\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  grid-auto-rows: 300px;\n`;\n\nfunction App() {\n  const [value,setValue]= useState(\"\")\n  const [results,setResults] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [images, setImage,item] = useState([]);\n\n  const fetchImages = ()=>{\n    const apiRoot = \"https://api.unsplash.com\";\n    const timestamp = Date.now();\n    \n     fetch(`https://api.unsplash.com/search/photos?client_id=m6SplDieHiS68r4MqpxZlXjCYLmFsjQr_xtjDX1y_D4&query=${value}?t=${timestamp}`)\n       .then(res=>res.json())\n       .then(data=>{\n           console.log(data)\n           setResults(data.results)\n           \n\n       }\n        \n        )\n  }\n  return (\n    <div className=\"App\">\n    <div className=\"mydiv\">\n    <span>Search</span>\n\n    <input type=\"text\"\n     style={{width:\"60%\"}}\n     value={value} \n     onChange={(e)=>setValue(e.target.value)}/> \n    <button onClick={()=>fetchImages()}>Send</button>\n    \n    </div>\n\n    <InfiniteScroll\n        dataLength={images.length}\n        next={fetchImages}\n        hasMore={true}\n        loader={<Loader />}\n      >\n        <WrapperImages>\n          {images.map(image => (\n            <img className=\"item\" key={item.id} src={item.urls.regular}/>\n          ))}\n        </WrapperImages>\n      </InfiniteScroll>\n    <div className=\"gallery\">\n    {\n        results.map((item)=>{\n\n\n  return <img className=\"item\" key={item.id} src={item.urls.regular}/>\n  \n\n\n\n        })\n\n    }\n    \n    \n    </div>\n     </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}